{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cinth\\\\Documents\\\\SI\\\\Auditoria 2024.1\\\\criptografia-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst alphabet = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\nfunction shiftChar(char, shift) {\n  const index = alphabet.indexOf(char);\n  if (index === -1) {\n    return char;\n  }\n  return alphabet[(index + shift + alphabet.length) % alphabet.length];\n}\nfunction criptografar(text, key) {\n  const shiftedText = text.split('').map(char => shiftChar(char, key)).join('');\n  return shiftedText.split('').reverse().join('');\n}\nfunction descriptografar(text, key) {\n  const reversedText = text.split('').reverse().join('');\n  return reversedText.split('').map(char => shiftChar(char, -key)).join('');\n}\nfunction App() {\n  _s();\n  const [key, setKey] = useState(-6);\n  const [originalMessage, setOriginalMessage] = useState('');\n  const [encryptedMessage, setEncryptedMessage] = useState('');\n  const [decryptedMessage, setDecryptedMessage] = useState('');\n  const handleEncrypt = () => {\n    setEncryptedMessage(criptografar(originalMessage, key));\n  };\n  const handleDecrypt = () => {\n    setDecryptedMessage(descriptografar(encryptedMessage, key));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Criptografia Mista\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Digite a mensagem para criptografar\",\n      value: originalMessage,\n      onChange: e => setOriginalMessage(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleEncrypt,\n      children: \"Criptografar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Mensagem Criptografada\",\n      value: encryptedMessage,\n      readOnly: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Digite a mensagem criptografada para descriptografar\",\n      value: encryptedMessage,\n      onChange: e => setEncryptedMessage(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDecrypt,\n      children: \"Descriptografar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Mensagem Descriptografada\",\n      value: decryptedMessage,\n      readOnly: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1reJYVzT+2m1/FkAsrcle5FAoVg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","alphabet","shiftChar","char","shift","index","indexOf","length","criptografar","text","key","shiftedText","split","map","join","reverse","descriptografar","reversedText","App","_s","setKey","originalMessage","setOriginalMessage","encryptedMessage","setEncryptedMessage","decryptedMessage","setDecryptedMessage","handleEncrypt","handleDecrypt","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","readOnly","_c","$RefreshReg$"],"sources":["C:/Users/cinth/Documents/SI/Auditoria 2024.1/criptografia-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './styles.css';\r\n\r\nconst alphabet = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r\n\r\nfunction shiftChar(char, shift) {\r\n  const index = alphabet.indexOf(char);\r\n  if (index === -1) {\r\n    return char;\r\n  }\r\n  return alphabet[(index + shift + alphabet.length) % alphabet.length];\r\n}\r\n\r\nfunction criptografar(text, key) {\r\n  const shiftedText = text.split('').map(char => shiftChar(char, key)).join('');\r\n  return shiftedText.split('').reverse().join('');\r\n}\r\n\r\nfunction descriptografar(text, key) {\r\n  const reversedText = text.split('').reverse().join('');\r\n  return reversedText.split('').map(char => shiftChar(char, -key)).join('');\r\n}\r\n\r\nfunction App() {\r\n  const [key, setKey] = useState(-6);\r\n  const [originalMessage, setOriginalMessage] = useState('');\r\n  const [encryptedMessage, setEncryptedMessage] = useState('');\r\n  const [decryptedMessage, setDecryptedMessage] = useState('');\r\n\r\n  const handleEncrypt = () => {\r\n    setEncryptedMessage(criptografar(originalMessage, key));\r\n  };\r\n\r\n  const handleDecrypt = () => {\r\n    setDecryptedMessage(descriptografar(encryptedMessage, key));\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Criptografia Mista</h1>\r\n      <input \r\n        type=\"text\" \r\n        placeholder=\"Digite a mensagem para criptografar\" \r\n        value={originalMessage}\r\n        onChange={e => setOriginalMessage(e.target.value)}\r\n      />\r\n      <button onClick={handleEncrypt}>Criptografar</button>\r\n      <input \r\n        type=\"text\" \r\n        placeholder=\"Mensagem Criptografada\" \r\n        value={encryptedMessage}\r\n        readOnly\r\n      />\r\n      <input \r\n        type=\"text\" \r\n        placeholder=\"Digite a mensagem criptografada para descriptografar\" \r\n        value={encryptedMessage}\r\n        onChange={e => setEncryptedMessage(e.target.value)}\r\n      />\r\n      <button onClick={handleDecrypt}>Descriptografar</button>\r\n      <input \r\n        type=\"text\" \r\n        placeholder=\"Mensagem Descriptografada\" \r\n        value={decryptedMessage}\r\n        readOnly\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}